%Programa que clasifica un vector respecto a n clases 
clc
clear
close all

num_cl = input('Ingresa el numero de clases a generar: ');

%matriz para guardar las clases 
matrices = cell(1,num_cl);

num_de_objetos = input('Ingresa el numero de objetos por clase: ');
%para seleccionar un color al azar para cada una de las clases


for i = 1:num_cl    
    mult_x = randi(15);
    mult_y = randi(15);
    centro_x = randi([0, 20])*mult_x; 

    centro_y = randi([0, 20])*mult_y;

    matrices{i} = [centro_x + randn(1, num_de_objetos); ...
                   centro_y + randn(1, num_de_objetos)];
end 
    

op = 0 ;
while (op ~= -1)
    %pedimos el vector al usuario
    vx=input('dame el valor de la coord en x=');
    vy=input('dame el valor de la coord en y=');
    
    vector=[vx;vy];
    medias = cell(1,num_cl);

    % Obtenemos la media de cada clase 
    for j = 1:num_cl
        medias{j} = mean(matrices{j},2);
    end
    
    % Calcular la distancia de cada vector a las medias de las clases
    distancias = zeros(1, num_cl);
    for j = 1:num_cl
        distancias(j) = norm(vector - medias{j});
    end
    
    % Determinar la clase más cercana
    [~, clase_asignada] = min(distancias);
    if clase_asignada > 100
        disp(['El vector no pertenece a ninguna clase debido a que ' num2str(clase_asignada)] '');
        disp(['El vector pertenece a la clase: ' num2str(clase_asignada)]);
        
            
        %para poder graficar
        colores = {'r','g','b','c','m','y',[.5, .5, .5], 'k'};
        leyendas = cell(1,num_cl);
        figure;
        hold on;
    
        %graficamos las clsaes 
        for i = 1: num_cl
            x_coords = matrices{i}(1,:);
            y_coords = matrices{i}(2,:);
            color = randi([1,length(colores)]);
            plot(x_coords,y_coords,'o','Color',colores{color}, "MarkerSize",8,"lineWidth",1.5);
            leyendas{i} = ['Clase ' num2str(i)];
        end
        leyendas{num_cl + 1} = ['Vector'];
    
    
    
        plot(vector(1,:),vector(2,:),'go','MarkerSize',10,'MarkerFaceColor','g')
        xlabel('Eje X');
        ylabel('Eje Y');
        title('Clasificación de vectores por clase');
        legend(leyendas);
        grid on;
        hold off;


    op = input('Deseas continuar con el programa (-1 para salir): ');
end 
disp('Fin de programa, ahi nos vemos. ');